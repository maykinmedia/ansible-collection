---

kind: Deployment
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: {{ django_app_k8s_name_prefix }}-redis
    app.kubernetes.io/instance: "{{ django_app_k8s_instance }}"
    app.kubernetes.io/version: "5.0"
    app.kubernetes.io/component: redis
    app.kubernetes.io/part-of: "{{ django_app_k8s_group }}"
    app.kubernetes.io/managed-by: Ansible
spec:
  # single replica because objects are kept in memory
  # TODO: share cache/storage?
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ django_app_k8s_name_prefix }}-redis
      app.kubernetes.io/instance: "{{ django_app_k8s_instance }}"
      app.kubernetes.io/part-of: "{{ django_app_k8s_group }}"
  template:
    metadata:
      name: {{ django_app_k8s_name_prefix }}-redis
      labels:
        app.kubernetes.io/name: {{ django_app_k8s_name_prefix }}-redis
        app.kubernetes.io/instance: "{{ django_app_k8s_instance }}"
        app.kubernetes.io/version: "5.0"
        app.kubernetes.io/component: redis
        app.kubernetes.io/part-of: "{{ django_app_k8s_group }}"
        app.kubernetes.io/managed-by: Ansible
    spec:
      containers:
      - name: redis
        image: {{ django_app_k8s_image_registry }}library/redis:5.0
        command:
          - redis-server
          - "/redis-config/redis.conf"

        resources:
          requests:
            memory: {{ django_app_k8s_redis_resource_requests.memory|default('100Mi') }}
            cpu: {{ django_app_k8s_redis_resource_requests.cpu|default('100m') }}
          limits:
            memory: {{ django_app_k8s_redis_resource_limits.memory|default('200Mi') }}
            cpu: {{ django_app_k8s_redis_resource_limits.cpu|default('250m') }}

        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10

        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20

        volumeMounts:
        - mountPath: /redis-config
          name: config
      volumes:
        - name: config
          configMap:
            name: {{ django_app_k8s_redis_config_name }}
            items:
            - key: redis-config
              path: redis.conf

      serviceAccountName: "{{ django_app_k8s_service_account| default('default') }}"
      securityContext: {{ django_app_k8s_pod_security_context }}
