---

# Deploy the internal PKI and NLX network PKI certificates.
#
# The internal certificates are used to secure communication between outway, inway
# and management API.
#
# The NLX network PKI certificates are used for communication over the internet -
# inways announce themselves with the directory and outways connection to (other)
# organization inways via mTLS.

- name: Set up shared certificates configmap
  k8s:
    state: "{{ nlx_state }}"
    name: "nlx-shared-certs-{{ nlx_instance }}"
    namespace: "{{ nlx_namespace }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        labels: "{{ nlx_metadata_common_labels }}"
      data:
        root.crt: "{{ nlx_root_cert }}"
        internal-root.crt: "{{ nlx_internal_root_cert }}"
    validate:
      fail_on_error: yes
      strict: yes
  register: nlx_shared_certs_config

# Internal certificates

- name: Set up internal TLS secrets
  k8s:
    state: present
    name: "nlx-internal-tls-{{ nlx_instance }}"
    namespace: "{{ nlx_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        labels: "{{ nlx_metadata_common_labels }}"
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ nlx_internal_cert | b64encode }}"
        tls.key: "{{ nlx_internal_key | b64encode }}"
    validate:
      fail_on_error: yes
      strict: yes
  register: nlx_internal_certificates_secret

# NLX network certificates

- name: Set up certificates
  k8s:
    state: "{{ nlx_state }}"
    name: "{{ nlx_certificates_secret_name }}"
    namespace: "{{ nlx_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        labels: "{{ nlx_metadata_common_labels }}"
      type: kubernetes.io/tls
      data:
        tls.key: "{{ nlx_org_key | b64encode }}"
        tls.crt: "{{ nlx_org_cert | b64encode }}"
    validate:
      fail_on_error: yes
      strict: yes
  when: nlx_certificates_provision

- name: Inspect certificates
  k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ nlx_certificates_secret_name }}"
    namespace: "{{ nlx_namespace }}"
  register: nlx_certificates_secret

- name: Set up TX DB secrets
  k8s:
    state: "{{ nlx_state }}"
    name: "nlx-txlogdb-{{ nlx_instance }}"
    namespace: "{{ nlx_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        labels: "{{ nlx_metadata_common_labels }}"
      type: Opaque
      data:
        PGUSER: "{{ nlx_txlog_db.username | b64encode }}"
        PGPASSWORD: "{{ nlx_txlog_db.password | b64encode }}"
        POSTGRES_DSN: "{{ _nlx_postgres_dsn | b64encode }}"
    validate:
      fail_on_error: yes
      strict: yes
  vars:
    _nlx_postgres_dsn: "postgres://{{ nlx_txlog_db.host }}/{{ nlx_txlog_db.name }}?connect_timeout=10"
  register: nlx_txlogdb_credentials
