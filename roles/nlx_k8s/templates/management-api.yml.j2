---

apiVersion: v1
kind: Deployment
metadata:
  labels: {{ _labels }}
spec:
  replicas: {{ nlx_management_api_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: management-api
      app.kubernetes.io/part-of: nlx
      app.kubernetes.io/instance: "{{ nlx_instance }}"
  template:
    metadata:
      name: management-api
      labels: {{ _labels }}
      annotations:
        credentials-version: "{{ nlx_txlogdb_credentials.result.metadata.resourceVersion }}"
        shared-certs-version: "{{ nlx_shared_certs_config.result.metadata.resourceVersion }}"
        internal-certs-version: "{{ nlx_internal_certificates_secret.result.metadata.resourceVersion }}"
        certs-version: "{{ nlx_certificates_secret.resources[0].metadata.resourceVersion }}"
        secrets-version: "{{ nlx_management_secrets.result.metadata.resourceVersion }}"
    spec:
      securityContext:
        fsGroup: 1001

      initContainers:
        - name: management-api-migrations
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          image: "{{ nlx_management_api_image }}"
          args:
            - /usr/local/bin/nlx-management-api
            - migrate
            - up
          imagePullPolicy: Always
          env:
            - name: PGSSLMODE
              value: require
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: "management-secrets-{{ nlx_instance }}"
                  key: PGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "management-secrets-{{ nlx_instance }}"
                  key: PGPASSWORD
            - name: POSTGRES_DSN
              valueFrom:
                secretKeyRef:
                  name: management-secrets-{{ nlx_instance }}
                  key: postgres-dsn

{% for key, value in nlx_management_api_db_env.items() %}
            - name: "{{ key }}"
              value: "{{ value }}"
{% endfor %}


      containers:
        - name: management-api
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          image: "{{ nlx_management_api_image }}"

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP

          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http

          resources:
            requests:
              memory: "10Mi"
              cpu: "10m"
            limits:
              memory: "500Mi"
              cpu: "1"

          env:
            - name: LISTEN_ADDRESS
              value: "0.0.0.0:8080"
            - name: CONFIG_LISTEN_ADDRESS
              value: "0.0.0.0:8443"

            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: "management-secrets-{{ nlx_instance }}"
                  key: PGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "management-secrets-{{ nlx_instance }}"
                  key: PGPASSWORD
            - name: POSTGRES_DSN
              valueFrom:
                secretKeyRef:
                  name: management-secrets-{{ nlx_instance }}
                  key: postgres-dsn
            - name: TRANSACTION_LOG_DSN
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: POSTGRES_DSN

{% for key, value in nlx_management_api_db_env.items() %}
            - name: "{{ key }}"
              value: "{{ value }}"
{% endfor %}


            - name: DIRECTORY_INSPECTION_ADDRESS
              value: "{{ nlx_management_api_directory_inspection_address }}"
            - name: DIRECTORY_REGISTRATION_ADDRESS
              value: "{{ nlx_management_api_directory_registration_address }}"

            # OpenID Connect
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: management-secrets-{{ nlx_instance }}
                  key: oidc-session-sign-key
            - name: OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: management-secrets-{{ nlx_instance }}
                  key: oidc-client-id
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: management-secrets-{{ nlx_instance }}
                  key: oidc-secret
            - name: OIDC_DISCOVERY_URL
              value: "{{ nlx_management_api_oidc_discovery_url }}"
            - name: OIDC_REDIRECT_URL
              value: "{{ nlx_management_api_oidc_redirect_url }}"
            - name: SESSION_COOKIE_SECURE
              value: "1"

            # certificates - internal PKI
            - name: TLS_ROOT_CERT
              value: "/certs/ca/internal-root.crt"
            - name: TLS_CERT
              value: /certs/internal/tls.crt
            - name: TLS_KEY
              value: /certs/internal/tls.key

            # certificates - NLX network
            - name: TLS_NLX_ROOT_CERT
              value: "/certs/ca/root.crt"
            - name: TLS_ORG_CERT
              value: "/certs/org/tls.crt"
            - name: TLS_ORG_KEY
              value: "/certs/org/tls.key"

            - name: LOG_TYPE
              value: live
            - name: LOG_LEVEL
              value: info

          volumeMounts:
            - name: shared-certs
              mountPath: "/certs/ca"
              readOnly: true
            - name: certs
              mountPath: "/certs/org"
              readOnly: true
            - name: internal-certs
              mountPath: "/certs/internal"
              readOnly: true

      volumes:
        - name: shared-certs
          configMap:
            name: "nlx-shared-certs-{{ nlx_instance }}"
        - name: certs
          secret:
            secretName: "{{ nlx_certificates_secret_name }}"
            defaultMode: 0640
        - name: internal-certs
          secret:
            secretName: "nlx-internal-tls-{{ nlx_instance }}"
            defaultMode: 0640
