---

apiVersion: v1
kind: Deployment
metadata:
  labels: {{ _labels }}
spec:
  replicas: {{ nlx_inway_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: inway
      app.kubernetes.io/part-of: nlx
      app.kubernetes.io/instance: "{{ nlx_instance }}"
  template:
    metadata:
      name: inway
      labels: {{ _labels }}
      annotations:
        credentials-version: "{{ nlx_txlogdb_credentials.result.metadata.resourceVersion }}"
        shared-certs-version: "{{ nlx_shared_certs_config.result.metadata.resourceVersion }}"
        internal-certs-version: "{{ nlx_internal_certificates_secret.result.metadata.resourceVersion }}"
        certs-version: "{{ nlx_certificates_secret.resources[0].metadata.resourceVersion }}"
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: transaction-db-migrations
          image: "{{ nlx_txdb_migrations_image }}"
          command: ['/usr/local/bin/upgrade-db.sh']
          env:
            - name: PGHOST
              value: "{{ nlx_txlog_db_host }}"
            - name: PGPORT
              value: "{{ nlx_txlog_db_port }}"
            - name: PGDATABASE
              value: "{{ nlx_txlog_db_name }}"
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: PGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: PGPASSWORD

{% for key, value in nlx_txlog_db_env.items() %}
            - name: "{{ key }}"
              value: "{{ value }}"
{% endfor %}


      containers:
        - name: inway
          image: "{{ nlx_inway_image }}"

          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: management
              containerPort: 8444
              protocol: TCP
            - name: monitoring
              containerPort: 8081
              protocol: TCP

          resources:
            requests:
              memory: "500Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"

          livenessProbe:
            httpGet:
              path: /health/live
              port: monitoring
            initialDelaySeconds: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: monitoring
            initialDelaySeconds: 3
            periodSeconds: 10

          env:
            - name: MANAGEMENT_API_ADDRESS
              value: "nlx-management-api-{{ nlx_instance }}:8443"
            - name: DIRECTORY_REGISTRATION_ADDRESS
              value: "{{ nlx_inway_directory_registration_address }}"
            - name: INWAY_NAME
              value: "NLX Inway {{ nlx_instance }}"
            - name: SELF_ADDRESS
              value: "{{ nlx_inway_self_address }}"

            - name: LISTEN_ADDRESS
              value: 0.0.0.0:8443
            - name: LISTEN_MANAGEMENT_ADDRESS
              value: 0.0.0.0:8444
            - name: MONITORING_ADDRESS
              value: 0.0.0.0:8081

            # certificates - internal PKI
            - name: TLS_ROOT_CERT
              value: "/certs/ca/internal-root.crt"
            - name: TLS_CERT
              value: /certs/internal/tls.crt
            - name: TLS_KEY
              value: /certs/internal/tls.key

            # certificates - NLX network
            - name: TLS_NLX_ROOT_CERT
              value: "/certs/ca/root.crt"
            - name: TLS_ORG_CERT
              value: "/certs/org/tls.crt"
            - name: TLS_ORG_KEY
              value: "/certs/org/tls.key"

            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: PGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: PGPASSWORD
            - name: POSTGRES_DSN
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: POSTGRES_DSN

{% for key, value in nlx_txlog_db_env.items() %}
            - name: "{{ key }}"
              value: "{{ value }}"
{% endfor %}


          volumeMounts:
            - name: shared-certs
              mountPath: "/certs/ca"
            - name: org-certs
              mountPath: "/certs/org"
            - name: internal-certs
              mountPath: "/certs/internal"

      volumes:
        - name: shared-certs
          configMap:
            name: "nlx-shared-certs-{{ nlx_instance }}"
        - name: org-certs
          secret:
            secretName: "{{ nlx_certificates_secret_name }}"
            defaultMode: 0640
        - name: internal-certs
          secret:
            secretName: "nlx-internal-tls-{{ nlx_instance }}"
            defaultMode: 0640
