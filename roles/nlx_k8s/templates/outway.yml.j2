---

apiVersion: v1
kind: Deployment
metadata:
  labels: {{ _labels }}
spec:
  replicas: {{ nlx_outway_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: outway
      app.kubernetes.io/part-of: nlx
      app.kubernetes.io/instance: "{{ nlx_instance }}"
  template:
    metadata:
      name: outway
      labels: {{ _labels }}
      annotations:
        credentials-version: "{{ nlx_txlogdb_credentials.result.metadata.resourceVersion }}"
        shared-certs-version: "{{ nlx_shared_certs_config.result.metadata.resourceVersion }}"
        internal-certs-version: "{{ nlx_internal_certificates_secret.result.metadata.resourceVersion }}"
        certs-version: "{{ nlx_certificates_secret.resources[0].metadata.resourceVersion }}"
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: transaction-db-migrations
          image: "{{ nlx_txdb_migrations_image }}"
          command: ['/usr/local/bin/upgrade-db.sh']
          env:
            - name: PGHOST
              value: "{{ nlx_txlog_db.host }}"
            - name: PGPORT
              value: "{{ nlx_txlog_db.port }}"
            - name: PGDATABASE
              value: "{{ nlx_txlog_db.name }}"
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: PGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: PGPASSWORD

{% for key, value in nlx_txlog_db_env.items() %}
            - name: "{{ key }}"
              value: "{{ value }}"
{% endfor %}


      containers:
        - name: outway
          image: "{{ nlx_outway_image }}"
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "500Mi"
              cpu: "500m"

          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30

          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30

          env:
            - name: MANAGEMENT_API_ADDRESS
              value: "nlx-management-api-{{ nlx_instance }}:8443"
            - name: DIRECTORY_INSPECTION_ADDRESS
              value: "{{ nlx_outway_directory_inspection_address }}"

            - name: LISTEN_ADDRESS
              value: :8080
            - name: LISTEN_HTTPS
              value: "0"

            # certificates - internal PKI
            - name: TLS_ROOT_CERT
              value: "/certs/ca/internal-root.crt"
            - name: TLS_CERT
              value: /certs/internal/tls.crt
            - name: TLS_KEY
              value: /certs/internal/tls.key

            # certificates - NLX network
            - name: TLS_NLX_ROOT_CERT
              value: "/certs/ca/root.crt"
            - name: TLS_ORG_CERT
              value: "/certs/org/tls.crt"
            - name: TLS_ORG_KEY
              value: "/certs/org/tls.key"

            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: PGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: PGPASSWORD
            - name: POSTGRES_DSN
              valueFrom:
                secretKeyRef:
                  name: "nlx-txlogdb-{{ nlx_instance }}"
                  key: POSTGRES_DSN

{% for key, value in nlx_txlog_db_env.items() %}
            - name: "{{ key }}"
              value: "{{ value }}"
{% endfor %}


          volumeMounts:
            - name: shared-certs
              mountPath: "/certs/ca"
            - name: org-certs
              mountPath: "/certs/org"
            - name: internal-certs
              mountPath: "/certs/internal"

      volumes:
        - name: shared-certs
          configMap:
            name: "nlx-shared-certs-{{ nlx_instance }}"
        - name: org-certs
          secret:
            secretName: "{{ nlx_certificates_secret_name }}"
            defaultMode: 0640
        - name: internal-certs
          secret:
            secretName: "nlx-internal-tls-{{ nlx_instance }}"
            defaultMode: 0640
